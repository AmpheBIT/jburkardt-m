function [ n_data, x, y, fxy ] = pochhammer_values ( n_data )

%*****************************************************************************80
%
%% POCHHAMMER_VALUES returns some values of the Pochhammer function.
%
%  Discussion:
%
%    Pochhammer(X,Y) = Gamma(X+Y) / Gamma(X)
%
%    For integer arguments, Pochhammer(M,N) = ( M + N - 1 )! / ( N - 1 )!
%
%    In Mathematica, the function can be evaluated by:
%
%      Pochhammer[X,Y]
%
%  Licensing:
%
%    This code is distributed under the GNU LGPL license.
%
%  Modified:
%
%    08 April 2010
%
%  Author:
%
%    John Burkardt
%
%  Reference:
%
%    Milton Abramowitz and Irene Stegun,
%    Handbook of Mathematical Functions,
%    US Department of Commerce, 1964.
%
%    Stephen Wolfram,
%    The Mathematica Book,
%    Fourth Edition,
%    Wolfram Media / Cambridge University Press, 1999.
%
%  Parameters:
%
%    Input/output, integer N_DATA.  The user sets N_DATA to 0 before the
%    first call.  On each call, the routine increments N_DATA by 1, and
%    returns the corresponding data; when there is no more data, the
%    output value of N_DATA will be 0 again.
%
%    Output, real X, Y, the arguments of the function.
%
%    Output, real FXY, the value of the function.
%
  n_max = 19;

  f_vec = [ ...
     720.0000000000000, ...
       1.875000000000000, ...
       1.000000000000000, ...
       4.500000000000000, ...
      24.75000000000000, ...
     110.0000000000000, ...
     377.1036305819165, ...
       4.362197352456253, ...
       1.000000000000000, ...
       1.467150493866654, ...
       2.180949074356397, ...
       3.282686710888467, ...
       5.000000000000000, ...
       7.702540092799931, ...
      11.99521990896018, ...
      18.87544858760869, ...
      30.00000000000000, ...
      48.14087557999957, ...
      77.96892940824118 ];

  x_vec = [ ...
     1.00, ...
     0.50, ...
     4.50, ...
     4.50, ...
     4.50, ...
    10.00, ...
    10.00, ...
     7.25, ...
     5.00, ...
     5.00, ...
     5.00, ...
     5.00, ...
     5.00, ...
     5.00, ...
     5.00, ...
     5.00, ...
     5.00, ...
     5.00, ...
     5.00 ];

  y_vec = [ ...
    6.00, ...
    3.00, ...
    0.00, ...
    1.00, ...
    2.00, ...
    2.00, ...
    2.50, ...
    0.75, ...
    0.00, ...
    0.25, ...
    0.50, ...
    0.75, ...
    1.00, ...
    1.25, ...
    1.50, ...
    1.75, ...
    2.00, ...
    2.25, ...
    2.50 ]; 

  if ( n_data < 0 )
    n_data = 0;
  end

  n_data = n_data + 1;

  if ( n_max < n_data )
    n_data = 0;
    x = 0.0;
    y = 0.0;
    fxy = 0.0;
  else
    x = x_vec(n_data);
    y = y_vec(n_data);
    fxy = f_vec(n_data);
  end

  return
end
