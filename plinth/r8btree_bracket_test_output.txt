>> r8btree_bracket_test

R8BTREE_NODE_ADD_RANDOM_TEST
  Given a BTREE of data and a value X, we seek to find
  "bracket values" so that X(L) <= X <= X(R).

       J       I    Left   Right  Parent

       1       1       2       3      -1
       2       2      -1       4       1
       3       3       5      -1       1
       4       4       6       7       2
       5       5       8       9       3
       6       6      10      11       4
       7       7      12      13       4
       8       8      14      15       5
       9       9      16      17       5
      10      10      18      19       6
      11      11      20      21       6
      12      12      22      23       7
      13      13      24      25       7
      14      14      26      27       8
      15      15      28      29       8
      16      16      30      31       9
      17      17      32      33       9
      18      18      -1      -1      10
      19      19      -1      -1      10
      20      20      -1      -1      11
      21      21      -1      -1      11
      22      22      -1      -1      12
      23      23      -1      -1      12
      24      24      -1      -1      13
      25      25      -1      -1      13
      26      26      -1      -1      14
      27      27      -1      -1      14
      28      28      -1      -1      15
      29      29      -1      -1      15
      30      30      -1      -1      16
      31      31      -1      -1      16
      32      32      -1      -1      17
      33      33      -1      -1      17

       J   Tree data

       1      0.5000      0.2500
       2      0.0000      0.0000
       3      1.0000      1.0000
       4      0.2500      0.0625
       5      0.7500      0.5625
       6      0.1250      0.0156
       7      0.3750      0.1406
       8      0.6250      0.3906
       9      0.8750      0.7656
      10      0.0625      0.0039
      11      0.1875      0.0352
      12      0.3125      0.0977
      13      0.4375      0.1914
      14      0.5625      0.3164
      15      0.6875      0.4727
      16      0.8125      0.6602
      17      0.9375      0.8789
      18      0.0312      0.0010
      19      0.0938      0.0088
      20      0.1562      0.0244
      21      0.2188      0.0479
      22      0.2812      0.0791
      23      0.3438      0.1182
      24      0.4062      0.1650
      25      0.4688      0.2197
      26      0.5312      0.2822
      27      0.5938      0.3525
      28      0.6562      0.4307
      29      0.7188      0.5166
      30      0.7812      0.6104
      31      0.8438      0.7119
      32      0.9062      0.8213
      33      0.9688      0.9385

  X(33) = 0.968800  F(X) = 0.938500
  X     = 0.972086
  X(3) = 1.000000  F(X) = 1.000000

  X(3) = 1.000000  F(X) = 1.000000
  X     = 1.108688
  No right bracket.

  No left bracket.
  X     = -0.059520
  X(2) = 0.000000  F(X) = 0.000000

  X(3) = 1.000000  F(X) = 1.000000
  X     = 1.120064
  No right bracket.

  X(15) = 0.687500  F(X) = 0.472700
  X     = 0.698539
  X(29) = 0.718800  F(X) = 0.516600

  No left bracket.
  X     = -0.103689
  X(2) = 0.000000  F(X) = 0.000000

  X(20) = 0.156200  F(X) = 0.024400
  X     = 0.167747
  X(11) = 0.187500  F(X) = 0.035200

  X(14) = 0.562500  F(X) = 0.316400
  X     = 0.570322
  X(27) = 0.593800  F(X) = 0.352500

  X(3) = 1.000000  F(X) = 1.000000
  X     = 1.186260
  No right bracket.

  X(3) = 1.000000  F(X) = 1.000000
  X     = 1.197333
  No right bracket.

  No left bracket.
  X     = -0.013580
  X(2) = 0.000000  F(X) = 0.000000

  X(3) = 1.000000  F(X) = 1.000000
  X     = 1.205889
  No right bracket.

  X(3) = 1.000000  F(X) = 1.000000
  X     = 1.185750
  No right bracket.

  X(25) = 0.468800  F(X) = 0.219700
  X     = 0.478063
  X(1) = 0.500000  F(X) = 0.250000

  X(17) = 0.937500  F(X) = 0.878900
  X     = 0.950421
  X(33) = 0.968800  F(X) = 0.938500

R8BTREE_BRACKET_TEST
  Normal end of execution.
>> 
