cvt_dataset
23-Aug-2004 14:54:07

CVT_DATASET (MATLAB version)
  Generate a CVT dataset.

  This program is meant to be used interactively.
  It is also possible to prepare a simple input 
  file beforehand and use it in batch mode.

  The program requests input values from the user:

  * NDIM, the spatial dimension,
  * N, the number of points to generate,
  * SEED, a seed to use for random number generation,
  * INIT, initialize the points:
    ** file, read data from a file;
    ** 'GRID', by picking points from a grid;
    ** 'HALTON', from a Halton sequence;
    ** 'RAND', using MATLAB's RAND function;
    ** 'UNIFORM', using a simple uniform RNG;
  * IT_MAX, the maximum number of iterations.
  * IT_TOL, the iteration tolerance.
  * SAMPLE, how to conduct the sampling.
    ** 'GRID', by picking points from a grid;
    ** 'HALTON', from a Halton sequence;
    ** 'RAND', using MATLAB's RAND function;
    ** 'UNIFORM', using a simple uniform RNG;
  * SAMPLE_NUM, the number of sample points.
  * BATCH, the number of sampling points to create at one time:

  The program generates the data, writes it to the file

   cvt_NDIM_N.txt

  where "NDIM" and "N" are the numeric values specified
  by the user, and then asks the user for more input.

  To indicate that no further computations are 
  desired, it is enough to input a nonsensical value, 
  such as -1.
  *
 *
*  Ready to generate a new dataset:
 *
  *

  NDIM is the spatial dimension.
  Any value less than 1 terminates execution.
  Enter NDIM:  2
  User input NDIM =            2

  N is the number of points to generate.
  Any value less than 1 terminates execution.
  Enter N:  85
  User input N =           85

  SEED is a seed for the random number generation.
  Any value less than 0 terminates execution.
  Enter SEED:  123456789
  User input SEED = 123456789

  INIT is the method of initializing the data:

  file       read data from a file;
  'GRID'     by picking points from a grid;
  'HALTON'   from a Halton sequence;
  'RAND'     using MATLAB's RAND function;
  'UNIFORM'  using a simple uniform RNG;
 
  (A blank value terminates execution).
  (Be sure to INCLUDE QUOTES around the string!
 
  Enter INIT:  'UNIFORM'
  User input INIT = "UNIFORM".

  IT_MAX is the maximum number of iterations.

  An iteration carries out the following steps:
  * the Voronoi region associated with each
    generator is estimated by sampling;
  * the centroid of each Voronoi region is estimated.
  * the generator is replaced by the centroid.

  If "enough" sampling points are used,
  and "enough" iterations are taken, this process
  will converge.

  (A negative value terminates execution).

  Enter IT_MAX:  40
  User input IT_MAX =           40

  IT_TOL is the iteration tolerance.

  Each iteration replaces the generators by the
  centroids.  The L2 norm of the difference between
  these two sets of points is an indirect measure
  of convergence.

  If this L2 norm falls below IT_TOL, the iteration
  is presumed to have converged, and is terminated
  early.

  A zero value is acceptable, and simply means that
  early termination will not occur.

  (A negative value terminates execution).

  Enter IT_TOL:  0.0
  User input IT_TOL = 0.000000

  SAMPLE is the method of sampling the region:

  'GRID'     by picking points from a grid;
  'HALTON'   from a Halton sequence;
  'RAND'     using MATLAB's RAND function;
  'UNIFORM'  using a simple uniform RNG;

  (A blank value terminates execution).
  (Be sure to INCLUDE QUOTES around the string!

  Enter SAMPLE:  'UNIFORM'
  User input SAMPLE = "UNIFORM".

  SAMPLE_NUM is the number of sample points.

  The Voronoi regions will be explored by generating
  SAMPLE_NUM points.  For each sample point, the
  nearest generator is found.  Using more points
  gives a better estimate of these regions.

  SAMPLE_NUM should be much larger than N, the
  number of generators.

  (A zero or negative value terminates execution.)

  Enter SAMPLE_NUM:  1000000
  User input SAMPLE_NUM =      1000000

  BATCH is the number of sample points to create
  at one time

  BATCH should be between 1 and SAMPLE_NUM.

  It is FASTER to set BATCH to SAMPLE_NUM;
  setting BATCH to 1 requires the least memory.

  (A zero or negative value terminates execution.)

  Enter BATCH:  1000
  User input BATCH =         1000

  Step  L2-Change

     1   2.658147e+000
     2   1.126944e+000
     3   6.768654e-001
     4   4.923390e-001
     5   4.002474e-001
     6   3.301371e-001
     7   2.917460e-001
     8   2.530495e-001
     9   2.330253e-001
    10   2.051253e-001
    11   1.930187e-001
    12   1.680479e-001
    13   1.562654e-001
    14   1.357149e-001
    15   1.230740e-001
    16   1.116495e-001
    17   1.027395e-001
    18   9.587810e-002
    19   9.327538e-002
    20   8.936696e-002
    21   8.393551e-002
    22   8.797544e-002
    23   8.102140e-002
    24   8.193020e-002
    25   8.114508e-002
    26   7.834206e-002
    27   7.763864e-002
    28   7.088833e-002
    29   7.125833e-002
    30   7.097386e-002
    31   6.387555e-002
    32   7.011895e-002
    33   6.428376e-002
    34   6.334641e-002
    35   6.505999e-002
    36   5.818748e-002
    37   5.796508e-002
    38   5.678549e-002
    39   5.661738e-002
    40   5.610279e-002

  The data was written to the file "cvt_2_85.txt".
  *
 *
*  Ready to generate a new dataset:
 *
  *

  NDIM is the spatial dimension.
  Any value less than 1 terminates execution.
  Enter NDIM:  -1
  User input NDIM =           -1

CVT_DATASET
  The input value of NDIM =           -1
  is interpreted as a request for termination.
  Normal end of execution.

  Final value of SEED = 485453438

23-Aug-2004 15:42:19
