sparse_test
01-Sep-2006 10:54:20

SPARSE_TEST
  Test the MATLAB SPARSE routines.

SPARSE_TEST01:
  Demonstrate the use of MATLAB's SPARSE facility
  to define a tiny sparse matrix.

a =

   (1,1)       11
   (3,1)       31
   (1,2)       12
   (2,2)       22
   (2,3)       23
   (3,3)       33
   (3,4)       34
   (1,5)       15
   (3,5)       35


SPARSE_TEST02:
  Demonstrate the use of MATLAB's SPARSE facility
  to define a sparse matrix, and solve an associated
  linear system.

ans =

    1.0000
    2.0000
    3.0000
    4.0000
    5.0000
    6.0000
    7.0000
    8.0000
    9.0000
   10.0000
   11.0000
   12.0000
   13.0000
   14.0000
   15.0000
   16.0000
   17.0000
   18.0000
   19.0000
   20.0000
   21.0000
   22.0000
   23.0000
   24.0000
   25.0000
   26.0000
   27.0000
   28.0000
   29.0000
   30.0000
   31.0000
   32.0000
   33.0000
   34.0000
   35.0000
   36.0000
   37.0000
   38.0000
   39.0000
   40.0000
   41.0000
   42.0000
   43.0000
   44.0000
   45.0000
   46.0000
   47.0000
   48.0000
   49.0000
   50.0000
   51.0000
   52.0000
   53.0000
   54.0000
   55.0000
   56.0000
   57.0000
   58.0000
   59.0000
   60.0000
   61.0000
   62.0000
   63.0000
   64.0000
   65.0000
   66.0000
   67.0000
   68.0000
   69.0000
   70.0000
   71.0000
   72.0000
   73.0000
   74.0000
   75.0000
   76.0000
   77.0000
   78.0000
   79.0000
   80.0000
   81.0000
   82.0000
   83.0000
   84.0000
   85.0000
   86.0000
   87.0000
   88.0000
   89.0000
   90.0000
   91.0000
   92.0000
   93.0000
   94.0000
   95.0000
   96.0000
   97.0000
   98.0000
   99.0000
  100.0000


SPARSE_TEST03:
  Demonstrate the use of MATLAB's SIZE, NNZ and FIND
  commands to retrieve information about a sparse matrix.

  [ m, n ] = size ( A )
  Matrix rows M =    21
  Matrix columns N = 21

  nz_num = nnz ( A )
  Matrix nonzeros NZ_NUM = 60

  [ row, col, val ] = find ( A )
  Matrix sparse triplet representation:

       ROW       COL     VAL

         1         1       10.000000
         2         1        1.000000
         1         2        1.000000
         2         2        9.000000
         3         2        1.000000
         2         3        1.000000
         3         3        8.000000
         4         3        1.000000
         3         4        1.000000
..(skipping some entries)...
        18        18        7.000000
        19        18        1.000000
        18        19        1.000000
        19        19        8.000000
        20        19        1.000000
        19        20        1.000000
        20        20        9.000000
        21        20        1.000000
        20        21        1.000000
        21        21       10.000000

SPARSE_TEST
  Normal end of execution.

01-Sep-2006 10:54:21
>> 
